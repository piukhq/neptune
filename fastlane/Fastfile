# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  before_all do |lane, options|

    ENV["MATCH_PASSWORD"] = "!32Nzmzmznz!"

  end

 desc "Retrieve all the certificates for all targets and configures your machine to compile against devices"
  lane :setup do

    # Bink

    match(type: "appstore", app_identifier: "com.bink.localhero", readonly: true)
    match(type: "development", app_identifier: "com.bink.localhero.alpha", readonly: true)
    match(type: "adhoc", app_identifier: "com.bink.localhero.beta", readonly: true)

    # For MR builds to Testflight
    match(type: "appstore", app_identifier: "com.bink.localhero.beta", readonly: true)

  end

  desc "Submit merge request build to TestFlight"
  lane :mr do |options|
    app_store_connect_api_key(
      key_id: ENV["FASTLANE_ASC_KEY_ID"],
      issuer_id: ENV["FASTLANE_ASC_ISSUER_ID"],
      key_content: ENV["FASTLANE_ASC_P8"],
      in_house: false
    )

    increment_build_number(build_number: options[:build_number])

    build_app(
      workspace: "LocalHero.xcworkspace",
      scheme: "App Store (internal)"
    )

    upload_to_testflight(
      changelog: "Merge request build for branch: " + options[:branch_name]
    )
  end

 desc "Submit Develop build to TestFlight"
  lane :develop do |options|
    app_store_connect_api_key(
      key_id: ENV["FASTLANE_ASC_KEY_ID"],
      issuer_id: ENV["FASTLANE_ASC_ISSUER_ID"],
      key_content: ENV["FASTLANE_ASC_P8"],
      in_house: false
    )

    increment_build_number(build_number: options[:build_number])

    build_app(
      workspace: "LocalHero.xcworkspace",
      scheme: "App Store (internal)"
    )

    upload_to_testflight(
      changelog: "Latest Develop build",
      distribute_external: true,
      groups: "Bink Internal",
      reject_build_waiting_for_review: true,
      skip_waiting_for_build_processing: false
    )
  end

  desc "Submit dysm to Sentry for crash reporting"
  lane :beta_dsym do
    sentry_upload_dsym(
      auth_token: ENV["SENTRY_AUTH_TOKEN"],
      org_slug: 'bink',
      project_slug: 'localhero',
      dsym_path: ENV["BITRISE_DSYM_PATH"]
    )
  end

end
